@using openCaseMaster.ViewModels
@model topicTaskModel

<div class="tab-pane" id="script">
    <div class="form-control" style="display: block;border-radius: 4px;min-height:300px;height:auto">
        @Html.HiddenFor(h => h.scripts, new { @id = "scripts", @name = "scripts" })


        <div class="row">
            <label class="col-md-2 control-label">开始时间</label>
            <div class="input-append date form_date col-md-4" style="display: table;">
                @Html.TextBoxFor(m => m.startDate, new { @class = "form-control", @size = "16", @readOnly = "readOnly" })
                <span class="add-on input-group-addon"><span class="icon-remove glyphicon glyphicon-remove"></span></span>
                <span class="add-on input-group-addon"><span class="icon-calendar glyphicon glyphicon-calendar"></span></span>
            </div>


        </div>
        <br />
        <div class="row">
            <label class="col-md-2 control-label">结束时间</label>
            <div class="input-append date form_date col-md-4" style="display: table;">
                @Html.TextBoxFor(m => m.endDate, new { @class = "form-control", @size = "16", @readOnly = "readOnly" })

                <span class="add-on input-group-addon"><span class="icon-remove glyphicon glyphicon-remove"></span></span>
                <span class="add-on input-group-addon"><span class="icon-calendar glyphicon glyphicon-calendar"></span></span>
            </div>


        </div>

        <table class="table table-striped" id="scriptTable">
            <caption>
                <div class="input-group">

                    @Html.DropDownListFor(t => t.appID, ViewBag.apps as List<SelectListItem>, new { @class = "form-control", @data_width = "140px" })

                    <button type="button" class="btn btn-info" name="uploadF" id="uploadF">上传案例 »</button>
                </div>
            </caption>
            <thead>
                <tr>
                    <th style="width:15%;">序号</th>
                    <th>案例名</th>

                </tr>
            </thead>
            <tbody></tbody>
        </table>



    </div>
</div>



<script type="text/javascript">


    $(function () {


        //实例化一个plupload上传对象
        var uploaderF = new plupload.Uploader({
            browse_button: 'uploadF', //触发文件选择对话框的按钮，为那个元素id
            runtimes: 'html5',
            url: '/UploadFile/uploadTaskScript', // 服务端上传路径
            unique_names: false, // 上传的文件名是否唯一
            max_file_size: '256kb', // 文件上传最大限制。
            //// 是否生成缩略图（仅对图片文件有效）
            //resize: { width: 320, height: 240, quality: 90 },
            ////  这个数组是选择器，就是上传文件时限制的上传文件类型
            filters: [{ title: "xls", extensions: "xls" }
            ],
            multi_selection: false

        });
        //在实例对象上调用init()方法进行初始化
        uploaderF.init();

        //绑定各种事件，并在事件监听函数中做你想做的事
        uploaderF.bind('FilesAdded', function (uploader, files) {
            //$.messager.progress({ title: '请稍后', msg: '上传中...' });

            uploader.start();

        });

        uploaderF.bind('Error', function (uploader, errObject) {

            alert("上传失败,请检查xls格式或联系管理员");
        });

        uploaderF.bind('FileUploaded', function (up, file, result) {
            var data = result.response;
            localStorage.setItem("addTaskscript", data);

            $("#scripts").val(data);

            initscript();//刷新缓存案例列表


        });


        $("#scripts").val(localStorage["addTaskscript"]);



        initscript();//初始化



    });


    function initscript() {


        var data = $.parseJSON(localStorage["addTaskscript"]);
        var i = 1;
        $("#scriptTable tbody").empty();
        for (var d in data) {
            var p = data[d];
            var tr = document.createElement("tr");
            var td1 = tr.insertCell();
            td1.innerHTML = i++;
            var td2 = tr.insertCell();
            td2.innerHTML = p.title;
            $("#scriptTable tbody").append(tr);
        }

    }
</script>

