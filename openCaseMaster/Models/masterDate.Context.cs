//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace openCaseMaster.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QCTESTEntities : DbContext
    {
        public QCTESTEntities()
            : base("name=QCTESTEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<admin_user> admin_user { get; set; }
        public virtual DbSet<M_application> M_application { get; set; }
        public virtual DbSet<M_deviceConfig> M_deviceConfig { get; set; }
        public virtual DbSet<M_DevProMapping> M_DevProMapping { get; set; }
        public virtual DbSet<M_runScene> M_runScene { get; set; }
        public virtual DbSet<M_runTestCase> M_runTestCase { get; set; }
        public virtual DbSet<M_testCase> M_testCase { get; set; }
        public virtual DbSet<M_testCaseSteps> M_testCaseSteps { get; set; }
        public virtual DbSet<M_testDemand> M_testDemand { get; set; }
        public virtual DbSet<project> project { get; set; }
        public virtual DbSet<project_app> project_app { get; set; }
        public virtual DbSet<project_department> project_department { get; set; }
        public virtual DbSet<project_executors> project_executors { get; set; }
        public virtual DbSet<project_rank> project_rank { get; set; }
        public virtual DbSet<project_stage> project_stage { get; set; }
        public virtual DbSet<project_type> project_type { get; set; }
        public virtual DbSet<user_type> user_type { get; set; }
    
        [DbFunction("QCTESTEntities", "MonthReport")]
        public virtual IQueryable<MonthReport_Result> MonthReport(string startYear, string iD)
        {
            var startYearParameter = startYear != null ?
                new ObjectParameter("startYear", startYear) :
                new ObjectParameter("startYear", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MonthReport_Result>("[QCTESTEntities].[MonthReport](@startYear, @ID)", startYearParameter, iDParameter);
        }
    
        [DbFunction("QCTESTEntities", "ProjectReport")]
        public virtual IQueryable<ProjectReport_Result> ProjectReport(Nullable<System.DateTime> startDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProjectReport_Result>("[QCTESTEntities].[ProjectReport](@startDate)", startDateParameter);
        }
    
        public virtual ObjectResult<M_ContainUserStepCase_Result> M_ContainUserStepCase(Nullable<int> p_1)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<M_ContainUserStepCase_Result>("M_ContainUserStepCase", p_1Parameter);
        }
    
        public virtual int M_runScene_delete(Nullable<int> p_1)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("M_runScene_delete", p_1Parameter);
        }
    
        public virtual int M_runScene_result(Nullable<int> p_1, ObjectParameter out1, ObjectParameter out2, ObjectParameter out3, ObjectParameter out4, ObjectParameter out5)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("M_runScene_result", p_1Parameter, out1, out2, out3, out4, out5);
        }
    
        public virtual int M_runTestCase_FailReset(Nullable<int> p_1)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("M_runTestCase_FailReset", p_1Parameter);
        }
    
        public virtual int M_testCase_delete(Nullable<int> p_1)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("M_testCase_delete", p_1Parameter);
        }
    
        public virtual int M_testCase_sort(Nullable<int> p_1, Nullable<int> p_2)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            var p_2Parameter = p_2.HasValue ?
                new ObjectParameter("p_2", p_2) :
                new ObjectParameter("p_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("M_testCase_sort", p_1Parameter, p_2Parameter);
        }
    
        public virtual int M_testDemand_delete(Nullable<int> p_1)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("M_testDemand_delete", p_1Parameter);
        }
    
        public virtual int M_testDemand_getProject(Nullable<int> p_1, ObjectParameter out1)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("M_testDemand_getProject", p_1Parameter, out1);
        }
    
        public virtual int M_testDemand_result(Nullable<int> p_1, ObjectParameter out1, ObjectParameter out2, ObjectParameter out3, ObjectParameter out4, ObjectParameter out5)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("M_testDemand_result", p_1Parameter, out1, out2, out3, out4, out5);
        }
    
        public virtual int M_testDemand_sort(Nullable<int> p_1, Nullable<int> p_2)
        {
            var p_1Parameter = p_1.HasValue ?
                new ObjectParameter("p_1", p_1) :
                new ObjectParameter("p_1", typeof(int));
    
            var p_2Parameter = p_2.HasValue ?
                new ObjectParameter("p_2", p_2) :
                new ObjectParameter("p_2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("M_testDemand_sort", p_1Parameter, p_2Parameter);
        }
    }
}
